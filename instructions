source ./products/olympe/linux/env/shell
python <nome_do_programa>.py

--------------------------------------
Simulador:

Terminal1(firmwared): sudo firmwared

Terminal2(sphinx): (com o Terminal1 rodando)
iwconfig # get your_interface_name

sphinx /opt/parrot-sphinx/usr/share/sphinx/worlds/outdoor_2.world /opt/parrot-sphinx/usr/share/sphinx/drones/bebop2.drone::stolen_interface=eth0:eth0:192.168.42.1/24

Terminal3(ROS): (com o Terminal1 e Terminal2 rodando)

ping 10.202.0.1 # só para verificar se tá recebendo algo do drone
source ~/bebop_ws/devel/setup.bash
roslaunch bebop_driver bebop_node.launch ip:=10.202.0.1

Terminal4(Controle/roda código em python): (com todos os outros temrinais rodando) 
source ~/bebop_ws/devel/setup.bash
rostopic pub --once bebop/takeoff std_msgs/Empty # decolagem

# Caso não decole, tente:
1.)
# Refaça a instalação do catikin, às vezes resolve dar catkin build de novo em bebop_ws

2.)
Rode: 
$ rostopic list
para ver os comandos possíveis instalados
Caso não tenha o bebop/takeoff, tente rodar outro comando para que a conexão seja estabelecida e depois faça a decolagem

3.)
# Caso não decole, você precisa compilar o ARDroneSDK: (fiz na pasta do meu projeto)
    repo init -u https://github.com/Parrot-Developers/arsdk_manifests.git -m release.xml
    repo sync
    ./build.sh -p arsdk-native -t build-sdk -j

    # Na pasta onde compilou o SDK
    copy: out/arsdk-native/staging/usr/lib
    paste: ~/bebop_ws/devel/lib
# Agora deve decolar


rostopic pub --once bebop/land std_msgs/Empty # aterrisagem

# sudo apt-get install ros-melodic-teleop-twist-keyboard
rosrun teleop_twist_keyboard teleop_twist_keyboard.py cmd_vel:=bebop/cmd_vel

Terminal5 (execução de código em python pelo Olympe)
source ./products/olympe/linux/env/shell
python -c 'import olympe; print("Installation OK")'
python primtakeoff.py